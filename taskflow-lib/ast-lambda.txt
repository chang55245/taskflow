cleanup of materialized not handledCXXMemberCallExpr 0x55da16759290 'void *'
|-MemberExpr 0x55da16755c48 '<bound member function type>' .task_definition 0x55da1674e3a0
| `-DeclRefExpr 0x55da16755c28 'taskflowLib':'class taskflowLib' lvalue Var 0x55da16754898 'myTaskflowLib' 'taskflowLib':'class taskflowLib'
|-ImplicitCastExpr 0x55da167592d8 'void *' <BitCast>
| `-ImplicitCastExpr 0x55da167592c0 'char *' <ArrayToPointerDecay>
|   `-DeclRefExpr 0x55da16755c78 'char[2]' lvalue Var 0x55da167546f0 'nameB' 'char[2]'
`-ImplicitCastExpr 0x55da16759538 'void (*)(void)' <UserDefinedConversion>
  `-CXXMemberCallExpr 0x55da16759418 'void (*)(void)'
    `-MemberExpr 0x55da16759378 '<bound member function type>' .operator void (*)() 0x55da16759008
      `-ImplicitCastExpr 0x55da16759360 'const class (lambda at /heorot/lchang21/taskflow/taskflow/taskflow-lib/test.cpp:40:51)' lvalue <NoOp>
        `-MaterializeTemporaryExpr 0x55da16759348 'class (lambda at /heorot/lchang21/taskflow/taskflow/taskflow-lib/test.cpp:40:51)' lvalue
          `-LambdaExpr 0x55da16759180 'class (lambda at /heorot/lchang21/taskflow/taskflow/taskflow-lib/test.cpp:40:51)'
            |-CXXRecordDecl 0x55da16755c98  implicit class definition
            | |-DefinitionData lambda pass_in_registers empty standard_layout trivially_copyable literal can_const_default_init
            | | |-DefaultConstructor defaulted_is_constexpr
            | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
            | | |-MoveConstructor exists simple trivial needs_implicit
            | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
            | | |-MoveAssignment
            | | `-Destructor simple irrelevant trivial
            | |-CXXMethodDecl 0x55da16755de0  used operator() 'void (void) const' inline
            | | `-CompoundStmt 0x55da16758d28
            | |   |-DeclStmt 0x55da167563f0
            | |   | `-VarDecl 0x55da16755fa8  used firstMatrix 'int[3][3]' cinit
            | |   |   `-InitListExpr 0x55da16756290 'int[3][3]'
            | |   |     |-InitListExpr 0x55da167562e8 'int[3]'
            | |   |     | |-IntegerLiteral 0x55da16756010 'int' 1
            | |   |     | |-IntegerLiteral 0x55da16756030 'int' 2
            | |   |     | `-IntegerLiteral 0x55da16756050 'int' 3
            | |   |     |-InitListExpr 0x55da16756340 'int[3]'
            | |   |     | |-IntegerLiteral 0x55da167560c8 'int' 4
            | |   |     | |-IntegerLiteral 0x55da167560e8 'int' 5
            | |   |     | `-IntegerLiteral 0x55da16756108 'int' 6
            | |   |     `-InitListExpr 0x55da16756398 'int[3]'
            | |   |       |-IntegerLiteral 0x55da16756180 'int' 7
            | |   |       |-IntegerLiteral 0x55da167561a0 'int' 8
            | |   |       `-IntegerLiteral 0x55da167561c0 'int' 9
            | |   |-DeclStmt 0x55da16756908
            | |   | `-VarDecl 0x55da167564c0  used secondMatrix 'int[3][3]' cinit
            | |   |   `-InitListExpr 0x55da167567a8 'int[3][3]'
            | |   |     |-InitListExpr 0x55da16756800 'int[3]'
            | |   |     | |-IntegerLiteral 0x55da16756528 'int' 9
            | |   |     | |-IntegerLiteral 0x55da16756548 'int' 8
            | |   |     | `-IntegerLiteral 0x55da16756568 'int' 7
            | |   |     |-InitListExpr 0x55da16756858 'int[3]'
            | |   |     | |-IntegerLiteral 0x55da167565e0 'int' 6
            | |   |     | |-IntegerLiteral 0x55da16756600 'int' 5
            | |   |     | `-IntegerLiteral 0x55da16756620 'int' 4
            | |   |     `-InitListExpr 0x55da167568b0 'int[3]'
            | |   |       |-IntegerLiteral 0x55da16756698 'int' 3
            | |   |       |-IntegerLiteral 0x55da167566b8 'int' 2
            | |   |       `-IntegerLiteral 0x55da167566d8 'int' 1
            | |   |-DeclStmt 0x55da16756a40
            | |   | `-VarDecl 0x55da167569d8  used result 'int[3][3]'
            | |   |-DeclStmt 0x55da167579e0
            | |   | |-VarDecl 0x55da16757750  used rowFirst 'int' cinit
            | |   | | `-IntegerLiteral 0x55da167577b8 'int' 3
            | |   | |-VarDecl 0x55da167577f0  used columnFirst 'int' cinit
            | |   | | `-IntegerLiteral 0x55da16757858 'int' 3
            | |   | |-VarDecl 0x55da16757890  rowSecond 'int' cinit
            | |   | | `-IntegerLiteral 0x55da167578f8 'int' 3
            | |   | `-VarDecl 0x55da16757930  used columnSecond 'int' cinit
            | |   |   `-IntegerLiteral 0x55da16757998 'int' 3
            | |   |-ForStmt 0x55da16757ea0
            | |   | |-DeclStmt 0x55da16757a98
            | |   | | `-VarDecl 0x55da16757a10  used i 'int' cinit
            | |   | |   `-IntegerLiteral 0x55da16757a78 'int' 0
            | |   | |-<<<NULL>>>
            | |   | |-BinaryOperator 0x55da16757b20 '_Bool' '<'
            | |   | | |-ImplicitCastExpr 0x55da16757af0 'int' <LValueToRValue>
            | |   | | | `-DeclRefExpr 0x55da16757ab0 'int' lvalue Var 0x55da16757a10 'i' 'int'
            | |   | | `-ImplicitCastExpr 0x55da16757b08 'int' <LValueToRValue>
            | |   | |   `-DeclRefExpr 0x55da16757ad0 'int' lvalue Var 0x55da16757750 'rowFirst' 'int'
            | |   | |-UnaryOperator 0x55da16757b60 'int' lvalue prefix '++'
            | |   | | `-DeclRefExpr 0x55da16757b40 'int' lvalue Var 0x55da16757a10 'i' 'int'
            | |   | `-CompoundStmt 0x55da16757e88
            | |   |   `-ForStmt 0x55da16757e50
            | |   |     |-DeclStmt 0x55da16757c18
            | |   |     | `-VarDecl 0x55da16757b90  used j 'int' cinit
            | |   |     |   `-IntegerLiteral 0x55da16757bf8 'int' 0
            | |   |     |-<<<NULL>>>
            | |   |     |-BinaryOperator 0x55da16757ca0 '_Bool' '<'
            | |   |     | |-ImplicitCastExpr 0x55da16757c70 'int' <LValueToRValue>
            | |   |     | | `-DeclRefExpr 0x55da16757c30 'int' lvalue Var 0x55da16757b90 'j' 'int'
            | |   |     | `-ImplicitCastExpr 0x55da16757c88 'int' <LValueToRValue>
            | |   |     |   `-DeclRefExpr 0x55da16757c50 'int' lvalue Var 0x55da16757930 'columnSecond' 'int'
            | |   |     |-UnaryOperator 0x55da16757ce0 'int' lvalue prefix '++'
            | |   |     | `-DeclRefExpr 0x55da16757cc0 'int' lvalue Var 0x55da16757b90 'j' 'int'
            | |   |     `-CompoundStmt 0x55da16757e38
            | |   |       `-BinaryOperator 0x55da16757e18 'int' lvalue '='
            | |   |         |-ArraySubscriptExpr 0x55da16757dd8 'int' lvalue
            | |   |         | |-ImplicitCastExpr 0x55da16757da8 'int *' <ArrayToPointerDecay>
            | |   |         | | `-ArraySubscriptExpr 0x55da16757d68 'int[3]' lvalue
            | |   |         | |   |-ImplicitCastExpr 0x55da16757d38 'int (*)[3]' <ArrayToPointerDecay>
            | |   |         | |   | `-DeclRefExpr 0x55da16757cf8 'int[3][3]' lvalue Var 0x55da167569d8 'result' 'int[3][3]'
            | |   |         | |   `-ImplicitCastExpr 0x55da16757d50 'int' <LValueToRValue>
            | |   |         | |     `-DeclRefExpr 0x55da16757d18 'int' lvalue Var 0x55da16757a10 'i' 'int'
            | |   |         | `-ImplicitCastExpr 0x55da16757dc0 'int' <LValueToRValue>
            | |   |         |   `-DeclRefExpr 0x55da16757d88 'int' lvalue Var 0x55da16757b90 'j' 'int'
            | |   |         `-IntegerLiteral 0x55da16757df8 'int' 0
            | |   |-ForStmt 0x55da16758c10
            | |   | |-DeclStmt 0x55da16757f78
            | |   | | `-VarDecl 0x55da16757ef0  used i 'int' cinit
            | |   | |   `-IntegerLiteral 0x55da16757f58 'int' 0
            | |   | |-<<<NULL>>>
            | |   | |-BinaryOperator 0x55da16758000 '_Bool' '<'
            | |   | | |-ImplicitCastExpr 0x55da16757fd0 'int' <LValueToRValue>
            | |   | | | `-DeclRefExpr 0x55da16757f90 'int' lvalue Var 0x55da16757ef0 'i' 'int'
            | |   | | `-ImplicitCastExpr 0x55da16757fe8 'int' <LValueToRValue>
            | |   | |   `-DeclRefExpr 0x55da16757fb0 'int' lvalue Var 0x55da16757750 'rowFirst' 'int'
            | |   | |-UnaryOperator 0x55da16758040 'int' lvalue prefix '++'
            | |   | | `-DeclRefExpr 0x55da16758020 'int' lvalue Var 0x55da16757ef0 'i' 'int'
            | |   | `-CompoundStmt 0x55da16758bf8
            | |   |   `-ForStmt 0x55da16758bc0
            | |   |     |-DeclStmt 0x55da167580f8
            | |   |     | `-VarDecl 0x55da16758070  used j 'int' cinit
            | |   |     |   `-IntegerLiteral 0x55da167580d8 'int' 0
            | |   |     |-<<<NULL>>>
            | |   |     |-BinaryOperator 0x55da16758180 '_Bool' '<'
            | |   |     | |-ImplicitCastExpr 0x55da16758150 'int' <LValueToRValue>
            | |   |     | | `-DeclRefExpr 0x55da16758110 'int' lvalue Var 0x55da16758070 'j' 'int'
            | |   |     | `-ImplicitCastExpr 0x55da16758168 'int' <LValueToRValue>
            | |   |     |   `-DeclRefExpr 0x55da16758130 'int' lvalue Var 0x55da16757930 'columnSecond' 'int'
            | |   |     |-UnaryOperator 0x55da167581c0 'int' lvalue prefix '++'
            | |   |     | `-DeclRefExpr 0x55da167581a0 'int' lvalue Var 0x55da16758070 'j' 'int'
            | |   |     `-CompoundStmt 0x55da16758728
            | |   |       `-ForStmt 0x55da167586f0
            | |   |         |-DeclStmt 0x55da16758278
            | |   |         | `-VarDecl 0x55da167581f0  used k 'int' cinit
            | |   |         |   `-IntegerLiteral 0x55da16758258 'int' 0
            | |   |         |-<<<NULL>>>
            | |   |         |-BinaryOperator 0x55da16758300 '_Bool' '<'
            | |   |         | |-ImplicitCastExpr 0x55da167582d0 'int' <LValueToRValue>
            | |   |         | | `-DeclRefExpr 0x55da16758290 'int' lvalue Var 0x55da167581f0 'k' 'int'
            | |   |         | `-ImplicitCastExpr 0x55da167582e8 'int' <LValueToRValue>
            | |   |         |   `-DeclRefExpr 0x55da167582b0 'int' lvalue Var 0x55da167577f0 'columnFirst' 'int'
            | |   |         |-UnaryOperator 0x55da16758340 'int' lvalue prefix '++'
            | |   |         | `-DeclRefExpr 0x55da16758320 'int' lvalue Var 0x55da167581f0 'k' 'int'
            | |   |         `-CompoundStmt 0x55da167586d8
            | |   |           `-CompoundAssignOperator 0x55da167586a8 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            | |   |             |-ArraySubscriptExpr 0x55da16758438 'int' lvalue
            | |   |             | |-ImplicitCastExpr 0x55da16758408 'int *' <ArrayToPointerDecay>
            | |   |             | | `-ArraySubscriptExpr 0x55da167583c8 'int[3]' lvalue
            | |   |             | |   |-ImplicitCastExpr 0x55da16758398 'int (*)[3]' <ArrayToPointerDecay>
            | |   |             | |   | `-DeclRefExpr 0x55da16758358 'int[3][3]' lvalue Var 0x55da167569d8 'result' 'int[3][3]'
            | |   |             | |   `-ImplicitCastExpr 0x55da167583b0 'int' <LValueToRValue>
            | |   |             | |     `-DeclRefExpr 0x55da16758378 'int' lvalue Var 0x55da16757ef0 'i' 'int'
            | |   |             | `-ImplicitCastExpr 0x55da16758420 'int' <LValueToRValue>
            | |   |             |   `-DeclRefExpr 0x55da167583e8 'int' lvalue Var 0x55da16758070 'j' 'int'
            | |   |             `-BinaryOperator 0x55da16758688 'int' '*'
            | |   |               |-ImplicitCastExpr 0x55da16758658 'int' <LValueToRValue>
            | |   |               | `-ArraySubscriptExpr 0x55da16758538 'int' lvalue
            | |   |               |   |-ImplicitCastExpr 0x55da16758508 'int *' <ArrayToPointerDecay>
            | |   |               |   | `-ArraySubscriptExpr 0x55da167584c8 'int[3]' lvalue
            | |   |               |   |   |-ImplicitCastExpr 0x55da16758498 'int (*)[3]' <ArrayToPointerDecay>
            | |   |               |   |   | `-DeclRefExpr 0x55da16758458 'int[3][3]' lvalue Var 0x55da16755fa8 'firstMatrix' 'int[3][3]'
            | |   |               |   |   `-ImplicitCastExpr 0x55da167584b0 'int' <LValueToRValue>
            | |   |               |   |     `-DeclRefExpr 0x55da16758478 'int' lvalue Var 0x55da16757ef0 'i' 'int'
            | |   |               |   `-ImplicitCastExpr 0x55da16758520 'int' <LValueToRValue>
            | |   |               |     `-DeclRefExpr 0x55da167584e8 'int' lvalue Var 0x55da167581f0 'k' 'int'
            | |   |               `-ImplicitCastExpr 0x55da16758670 'int' <LValueToRValue>
            | |   |                 `-ArraySubscriptExpr 0x55da16758638 'int' lvalue
            | |   |                   |-ImplicitCastExpr 0x55da16758608 'int *' <ArrayToPointerDecay>
            | |   |                   | `-ArraySubscriptExpr 0x55da167585c8 'int[3]' lvalue
            | |   |                   |   |-ImplicitCastExpr 0x55da16758598 'int (*)[3]' <ArrayToPointerDecay>
            | |   |                   |   | `-DeclRefExpr 0x55da16758558 'int[3][3]' lvalue Var 0x55da167564c0 'secondMatrix' 'int[3][3]'
            | |   |                   |   `-ImplicitCastExpr 0x55da167585b0 'int' <LValueToRValue>
            | |   |                   |     `-DeclRefExpr 0x55da16758578 'int' lvalue Var 0x55da167581f0 'k' 'int'
            | |   |                   `-ImplicitCastExpr 0x55da16758620 'int' <LValueToRValue>
            | |   |                     `-DeclRefExpr 0x55da167585e8 'int' lvalue Var 0x55da16758070 'j' 'int'
            | |   `-CallExpr 0x55da16758ce8 'int'
            | |     |-ImplicitCastExpr 0x55da16758cd0 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
            | |     | `-DeclRefExpr 0x55da16758cb0 'int (const char *__restrict, ...)' lvalue Function 0x55da16731f88 'printf' 'int (const char *__restrict, ...)'
            | |     `-ImplicitCastExpr 0x55da16758d10 'const char *' <ArrayToPointerDecay>
            | |       `-StringLiteral 0x55da16758c90 'const char[3]' lvalue "B\n"
            | |-CXXConversionDecl 0x55da16759008  implicit used constexpr operator void (*)() 'void (*(void) const noexcept)(void)' inline
            | | `-CompoundStmt 0x55da16759400
            | |   `-ReturnStmt 0x55da167593f0
            | |     `-ImplicitCastExpr 0x55da167593d8 'void (*)(void)' <FunctionToPointerDecay>
            | |       `-DeclRefExpr 0x55da167593b8 'void (void)' lvalue CXXMethod 0x55da167590c0 '__invoke' 'void (void)'
            | |-CXXMethodDecl 0x55da167590c0  implicit used __invoke 'void (void)' static inline
            | | `-CompoundStmt 0x55da167593a8
            | `-CXXDestructorDecl 0x55da167591a8  implicit referenced ~(lambda at /heorot/lchang21/taskflow/taskflow/taskflow-lib/test.cpp:40:51) 'void (void) noexcept' inline default trivial
            `-CompoundStmt 0x55da16758d28
              |-DeclStmt 0x55da167563f0
              | `-VarDecl 0x55da16755fa8  used firstMatrix 'int[3][3]' cinit
              |   `-InitListExpr 0x55da16756290 'int[3][3]'
              |     |-InitListExpr 0x55da167562e8 'int[3]'
              |     | |-IntegerLiteral 0x55da16756010 'int' 1
              |     | |-IntegerLiteral 0x55da16756030 'int' 2
              |     | `-IntegerLiteral 0x55da16756050 'int' 3
              |     |-InitListExpr 0x55da16756340 'int[3]'
              |     | |-IntegerLiteral 0x55da167560c8 'int' 4
              |     | |-IntegerLiteral 0x55da167560e8 'int' 5
              |     | `-IntegerLiteral 0x55da16756108 'int' 6
              |     `-InitListExpr 0x55da16756398 'int[3]'
              |       |-IntegerLiteral 0x55da16756180 'int' 7
              |       |-IntegerLiteral 0x55da167561a0 'int' 8
              |       `-IntegerLiteral 0x55da167561c0 'int' 9
              |-DeclStmt 0x55da16756908
              | `-VarDecl 0x55da167564c0  used secondMatrix 'int[3][3]' cinit
              |   `-InitListExpr 0x55da167567a8 'int[3][3]'
              |     |-InitListExpr 0x55da16756800 'int[3]'
              |     | |-IntegerLiteral 0x55da16756528 'int' 9
              |     | |-IntegerLiteral 0x55da16756548 'int' 8
              |     | `-IntegerLiteral 0x55da16756568 'int' 7
              |     |-InitListExpr 0x55da16756858 'int[3]'
              |     | |-IntegerLiteral 0x55da167565e0 'int' 6
              |     | |-IntegerLiteral 0x55da16756600 'int' 5
              |     | `-IntegerLiteral 0x55da16756620 'int' 4
              |     `-InitListExpr 0x55da167568b0 'int[3]'
              |       |-IntegerLiteral 0x55da16756698 'int' 3
              |       |-IntegerLiteral 0x55da167566b8 'int' 2
              |       `-IntegerLiteral 0x55da167566d8 'int' 1
              |-DeclStmt 0x55da16756a40
              | `-VarDecl 0x55da167569d8  used result 'int[3][3]'
              |-DeclStmt 0x55da167579e0
              | |-VarDecl 0x55da16757750  used rowFirst 'int' cinit
              | | `-IntegerLiteral 0x55da167577b8 'int' 3
              | |-VarDecl 0x55da167577f0  used columnFirst 'int' cinit
              | | `-IntegerLiteral 0x55da16757858 'int' 3
              | |-VarDecl 0x55da16757890  rowSecond 'int' cinit
              | | `-IntegerLiteral 0x55da167578f8 'int' 3
              | `-VarDecl 0x55da16757930  used columnSecond 'int' cinit
              |   `-IntegerLiteral 0x55da16757998 'int' 3
              |-ForStmt 0x55da16757ea0
              | |-DeclStmt 0x55da16757a98
              | | `-VarDecl 0x55da16757a10  used i 'int' cinit
              | |   `-IntegerLiteral 0x55da16757a78 'int' 0
              | |-<<<NULL>>>
              | |-BinaryOperator 0x55da16757b20 '_Bool' '<'
              | | |-ImplicitCastExpr 0x55da16757af0 'int' <LValueToRValue>
              | | | `-DeclRefExpr 0x55da16757ab0 'int' lvalue Var 0x55da16757a10 'i' 'int'
              | | `-ImplicitCastExpr 0x55da16757b08 'int' <LValueToRValue>
              | |   `-DeclRefExpr 0x55da16757ad0 'int' lvalue Var 0x55da16757750 'rowFirst' 'int'
              | |-UnaryOperator 0x55da16757b60 'int' lvalue prefix '++'
              | | `-DeclRefExpr 0x55da16757b40 'int' lvalue Var 0x55da16757a10 'i' 'int'
              | `-CompoundStmt 0x55da16757e88
              |   `-ForStmt 0x55da16757e50
              |     |-DeclStmt 0x55da16757c18
              |     | `-VarDecl 0x55da16757b90  used j 'int' cinit
              |     |   `-IntegerLiteral 0x55da16757bf8 'int' 0
              |     |-<<<NULL>>>
              |     |-BinaryOperator 0x55da16757ca0 '_Bool' '<'
              |     | |-ImplicitCastExpr 0x55da16757c70 'int' <LValueToRValue>
              |     | | `-DeclRefExpr 0x55da16757c30 'int' lvalue Var 0x55da16757b90 'j' 'int'
              |     | `-ImplicitCastExpr 0x55da16757c88 'int' <LValueToRValue>
              |     |   `-DeclRefExpr 0x55da16757c50 'int' lvalue Var 0x55da16757930 'columnSecond' 'int'
              |     |-UnaryOperator 0x55da16757ce0 'int' lvalue prefix '++'
              |     | `-DeclRefExpr 0x55da16757cc0 'int' lvalue Var 0x55da16757b90 'j' 'int'
              |     `-CompoundStmt 0x55da16757e38
              |       `-BinaryOperator 0x55da16757e18 'int' lvalue '='
              |         |-ArraySubscriptExpr 0x55da16757dd8 'int' lvalue
              |         | |-ImplicitCastExpr 0x55da16757da8 'int *' <ArrayToPointerDecay>
              |         | | `-ArraySubscriptExpr 0x55da16757d68 'int[3]' lvalue
              |         | |   |-ImplicitCastExpr 0x55da16757d38 'int (*)[3]' <ArrayToPointerDecay>
              |         | |   | `-DeclRefExpr 0x55da16757cf8 'int[3][3]' lvalue Var 0x55da167569d8 'result' 'int[3][3]'
              |         | |   `-ImplicitCastExpr 0x55da16757d50 'int' <LValueToRValue>
              |         | |     `-DeclRefExpr 0x55da16757d18 'int' lvalue Var 0x55da16757a10 'i' 'int'
              |         | `-ImplicitCastExpr 0x55da16757dc0 'int' <LValueToRValue>
              |         |   `-DeclRefExpr 0x55da16757d88 'int' lvalue Var 0x55da16757b90 'j' 'int'
              |         `-IntegerLiteral 0x55da16757df8 'int' 0
              |-ForStmt 0x55da16758c10
              | |-DeclStmt 0x55da16757f78
              | | `-VarDecl 0x55da16757ef0  used i 'int' cinit
              | |   `-IntegerLiteral 0x55da16757f58 'int' 0
              | |-<<<NULL>>>
              | |-BinaryOperator 0x55da16758000 '_Bool' '<'
              | | |-ImplicitCastExpr 0x55da16757fd0 'int' <LValueToRValue>
              | | | `-DeclRefExpr 0x55da16757f90 'int' lvalue Var 0x55da16757ef0 'i' 'int'
              | | `-ImplicitCastExpr 0x55da16757fe8 'int' <LValueToRValue>
              | |   `-DeclRefExpr 0x55da16757fb0 'int' lvalue Var 0x55da16757750 'rowFirst' 'int'
              | |-UnaryOperator 0x55da16758040 'int' lvalue prefix '++'
              | | `-DeclRefExpr 0x55da16758020 'int' lvalue Var 0x55da16757ef0 'i' 'int'
              | `-CompoundStmt 0x55da16758bf8
              |   `-ForStmt 0x55da16758bc0
              |     |-DeclStmt 0x55da167580f8
              |     | `-VarDecl 0x55da16758070  used j 'int' cinit
              |     |   `-IntegerLiteral 0x55da167580d8 'int' 0
              |     |-<<<NULL>>>
              |     |-BinaryOperator 0x55da16758180 '_Bool' '<'
              |     | |-ImplicitCastExpr 0x55da16758150 'int' <LValueToRValue>
              |     | | `-DeclRefExpr 0x55da16758110 'int' lvalue Var 0x55da16758070 'j' 'int'
              |     | `-ImplicitCastExpr 0x55da16758168 'int' <LValueToRValue>
              |     |   `-DeclRefExpr 0x55da16758130 'int' lvalue Var 0x55da16757930 'columnSecond' 'int'
              |     |-UnaryOperator 0x55da167581c0 'int' lvalue prefix '++'
              |     | `-DeclRefExpr 0x55da167581a0 'int' lvalue Var 0x55da16758070 'j' 'int'
              |     `-CompoundStmt 0x55da16758728
              |       `-ForStmt 0x55da167586f0
              |         |-DeclStmt 0x55da16758278
              |         | `-VarDecl 0x55da167581f0  used k 'int' cinit
              |         |   `-IntegerLiteral 0x55da16758258 'int' 0
              |         |-<<<NULL>>>
              |         |-BinaryOperator 0x55da16758300 '_Bool' '<'
              |         | |-ImplicitCastExpr 0x55da167582d0 'int' <LValueToRValue>
              |         | | `-DeclRefExpr 0x55da16758290 'int' lvalue Var 0x55da167581f0 'k' 'int'
              |         | `-ImplicitCastExpr 0x55da167582e8 'int' <LValueToRValue>
              |         |   `-DeclRefExpr 0x55da167582b0 'int' lvalue Var 0x55da167577f0 'columnFirst' 'int'
              |         |-UnaryOperator 0x55da16758340 'int' lvalue prefix '++'
              |         | `-DeclRefExpr 0x55da16758320 'int' lvalue Var 0x55da167581f0 'k' 'int'
              |         `-CompoundStmt 0x55da167586d8
              |           `-CompoundAssignOperator 0x55da167586a8 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              |             |-ArraySubscriptExpr 0x55da16758438 'int' lvalue
              |             | |-ImplicitCastExpr 0x55da16758408 'int *' <ArrayToPointerDecay>
              |             | | `-ArraySubscriptExpr 0x55da167583c8 'int[3]' lvalue
              |             | |   |-ImplicitCastExpr 0x55da16758398 'int (*)[3]' <ArrayToPointerDecay>
              |             | |   | `-DeclRefExpr 0x55da16758358 'int[3][3]' lvalue Var 0x55da167569d8 'result' 'int[3][3]'
              |             | |   `-ImplicitCastExpr 0x55da167583b0 'int' <LValueToRValue>
              |             | |     `-DeclRefExpr 0x55da16758378 'int' lvalue Var 0x55da16757ef0 'i' 'int'
              |             | `-ImplicitCastExpr 0x55da16758420 'int' <LValueToRValue>
              |             |   `-DeclRefExpr 0x55da167583e8 'int' lvalue Var 0x55da16758070 'j' 'int'
              |             `-BinaryOperator 0x55da16758688 'int' '*'
              |               |-ImplicitCastExpr 0x55da16758658 'int' <LValueToRValue>
              |               | `-ArraySubscriptExpr 0x55da16758538 'int' lvalue
              |               |   |-ImplicitCastExpr 0x55da16758508 'int *' <ArrayToPointerDecay>
              |               |   | `-ArraySubscriptExpr 0x55da167584c8 'int[3]' lvalue
              |               |   |   |-ImplicitCastExpr 0x55da16758498 'int (*)[3]' <ArrayToPointerDecay>
              |               |   |   | `-DeclRefExpr 0x55da16758458 'int[3][3]' lvalue Var 0x55da16755fa8 'firstMatrix' 'int[3][3]'
              |               |   |   `-ImplicitCastExpr 0x55da167584b0 'int' <LValueToRValue>
              |               |   |     `-DeclRefExpr 0x55da16758478 'int' lvalue Var 0x55da16757ef0 'i' 'int'
              |               |   `-ImplicitCastExpr 0x55da16758520 'int' <LValueToRValue>
              |               |     `-DeclRefExpr 0x55da167584e8 'int' lvalue Var 0x55da167581f0 'k' 'int'
              |               `-ImplicitCastExpr 0x55da16758670 'int' <LValueToRValue>
              |                 `-ArraySubscriptExpr 0x55da16758638 'int' lvalue
              |                   |-ImplicitCastExpr 0x55da16758608 'int *' <ArrayToPointerDecay>
              |                   | `-ArraySubscriptExpr 0x55da167585c8 'int[3]' lvalue
              |                   |   |-ImplicitCastExpr 0x55da16758598 'int (*)[3]' <ArrayToPointerDecay>
              |                   |   | `-DeclRefExpr 0x55da16758558 'int[3][3]' lvalue Var 0x55da167564c0 'secondMatrix' 'int[3][3]'
              |                   |   `-ImplicitCastExpr 0x55da167585b0 'int' <LValueToRValue>
              |                   |     `-DeclRefExpr 0x55da16758578 'int' lvalue Var 0x55da167581f0 'k' 'int'
              |                   `-ImplicitCastExpr 0x55da16758620 'int' <LValueToRValue>
              |                     `-DeclRefExpr 0x55da167585e8 'int' lvalue Var 0x55da16758070 'j' 'int'
              `-CallExpr 0x55da16758ce8 'int'
                |-ImplicitCastExpr 0x55da16758cd0 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
                | `-DeclRefExpr 0x55da16758cb0 'int (const char *__restrict, ...)' lvalue Function 0x55da16731f88 'printf' 'int (const char *__restrict, ...)'
                `-ImplicitCastExpr 0x55da16758d10 'const char *' <ArrayToPointerDecay>
                  `-StringLiteral 0x55da16758c90 'const char[3]' lvalue "B\n"