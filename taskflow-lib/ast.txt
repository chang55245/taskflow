FunctionDecl 0x6d74c18 </home/lchang21/taskflow/taskflow-lib/use.cpp:3:1, line:17:1> line:3:5 main 'int ()'
`-CompoundStmt 0x6d77558 <col:11, line:17:1>
  |-DeclStmt 0x6d75250 <line:5:5, col:39>
  | `-VarDecl 0x6d74cc8 <col:5, col:38> col:10 used myTaskflowLib 'taskflowLib':'taskflowLib' cinit
  |   `-CXXTemporaryObjectExpr 0x6d75098 <col:26, col:38> 'taskflowLib' 'void ()'
  |-DeclStmt 0x6d75f08 <line:7:5, col:70>
  | `-VarDecl 0x6d75278 <col:5, col:69> col:10 used A 'void *':'void *' cinit
  |   `-ExprWithCleanups 0x6d75ef0 <col:14, col:69> 'void *'
  |     `-CXXMemberCallExpr 0x6d75b00 <col:14, col:69> 'void *'
  |       |-MemberExpr 0x6d75300 <col:14, col:28> '<bound member function type>' .task_definition 0x6d746a0
  |       | `-DeclRefExpr 0x6d752e0 <col:14> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  |       |-CXXBindTemporaryExpr 0x6d75c98 <col:44> 'std::string':'std::__cxx11::basic_string<char>' (CXXTemporary 0x6d75c98)
  |       | `-ImplicitCastExpr 0x6d75c78 <col:44> 'std::string':'std::__cxx11::basic_string<char>' <ConstructorConversion>
  |       |   `-CXXConstructExpr 0x6d75c40 <col:44> 'std::string':'std::__cxx11::basic_string<char>' 'void (const char *, const std::allocator<char> &)'
  |       |     |-ImplicitCastExpr 0x6d75b58 <col:44> 'const char *' <ArrayToPointerDecay>
  |       |     | `-StringLiteral 0x6d75330 <col:44> 'const char [2]' lvalue "A"
  |       |     `-CXXDefaultArgExpr 0x6d75c20 <<invalid sloc>> 'const std::allocator<char>':'const std::allocator<char>' lvalue
  |       `-ImplicitCastExpr 0x6d75e38 <col:49, col:68> 'void (*)()' <UserDefinedConversion>
  |         `-CXXMemberCallExpr 0x6d75e18 <col:49, col:68> 'void (*)()'
  |           `-MemberExpr 0x6d75d78 <col:49, col:68> '<bound member function type>' .operator void (*)() 0x6d75888
  |             `-ImplicitCastExpr 0x6d75d60 <col:49, col:68> 'const (lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:7:49)' lvalue <NoOp>
  |               `-MaterializeTemporaryExpr 0x6d75d48 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:7:49)' lvalue
  |                 `-LambdaExpr 0x6d759f0 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:7:49)'
  |                   |-CXXRecordDecl 0x6d75398 <col:49> col:49 implicit class definition
  |                   | |-DefinitionData lambda pass_in_registers empty standard_layout trivially_copyable literal can_const_default_init
  |                   | | |-DefaultConstructor defaulted_is_constexpr
  |                   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveConstructor exists simple trivial needs_implicit
  |                   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveAssignment
  |                   | | `-Destructor simple irrelevant trivial
  |                   | |-CXXMethodDecl 0x6d754d0 <col:52, col:68> col:49 used constexpr operator() 'void () const' inline
  |                   | | `-CompoundStmt 0x6d756c0 <col:53, col:68>
  |                   | |   `-CallExpr 0x6d75680 <col:54, col:66> 'int'
  |                   | |     |-ImplicitCastExpr 0x6d75668 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                   | |     | `-DeclRefExpr 0x6d755e8 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                   | |     `-ImplicitCastExpr 0x6d756a8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                   | |       `-StringLiteral 0x6d755c8 <col:61> 'const char [3]' lvalue "A\n"
  |                   | |-CXXConversionDecl 0x6d75888 <col:49> col:49 implicit used constexpr operator void (*)() 'void (*() const noexcept)()' inline
  |                   | | `-CompoundStmt 0x6d75e00 <col:49>
  |                   | |   `-ReturnStmt 0x6d75df0 <col:49>
  |                   | |     `-ImplicitCastExpr 0x6d75dd8 <col:49> 'void (*)()' <FunctionToPointerDecay>
  |                   | |       `-DeclRefExpr 0x6d75db8 <col:49> 'void ()' lvalue CXXMethod 0x6d75938 '__invoke' 'void ()'
  |                   | |-CXXMethodDecl 0x6d75938 <col:49> col:49 implicit used __invoke 'void ()' static inline
  |                   | | `-CompoundStmt 0x6d75da8 <col:49>
  |                   | `-CXXDestructorDecl 0x6d75a20 <col:49> col:49 implicit referenced ~ 'void () noexcept' inline default trivial
  |                   `-CompoundStmt 0x6d756c0 <col:53, col:68>
  |                     `-CallExpr 0x6d75680 <col:54, col:66> 'int'
  |                       |-ImplicitCastExpr 0x6d75668 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                       | `-DeclRefExpr 0x6d755e8 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                       `-ImplicitCastExpr 0x6d756a8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                         `-StringLiteral 0x6d755c8 <col:61> 'const char [3]' lvalue "A\n"
  |-DeclStmt 0x6d768e0 <line:8:5, col:70>
  | `-VarDecl 0x6d75f30 <col:5, col:69> col:10 used B 'void *':'void *' cinit
  |   `-ExprWithCleanups 0x6d768c8 <col:14, col:69> 'void *'
  |     `-CXXMemberCallExpr 0x6d76610 <col:14, col:69> 'void *'
  |       |-MemberExpr 0x6d75fb8 <col:14, col:28> '<bound member function type>' .task_definition 0x6d746a0
  |       | `-DeclRefExpr 0x6d75f98 <col:14> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  |       |-CXXBindTemporaryExpr 0x6d766f8 <col:44> 'std::string':'std::__cxx11::basic_string<char>' (CXXTemporary 0x6d766f8)
  |       | `-ImplicitCastExpr 0x6d766d8 <col:44> 'std::string':'std::__cxx11::basic_string<char>' <ConstructorConversion>
  |       |   `-CXXConstructExpr 0x6d766a0 <col:44> 'std::string':'std::__cxx11::basic_string<char>' 'void (const char *, const std::allocator<char> &)'
  |       |     |-ImplicitCastExpr 0x6d76668 <col:44> 'const char *' <ArrayToPointerDecay>
  |       |     | `-StringLiteral 0x6d75fe8 <col:44> 'const char [2]' lvalue "B"
  |       |     `-CXXDefaultArgExpr 0x6d76680 <<invalid sloc>> 'const std::allocator<char>':'const std::allocator<char>' lvalue
  |       `-ImplicitCastExpr 0x6d76838 <col:49, col:68> 'void (*)()' <UserDefinedConversion>
  |         `-CXXMemberCallExpr 0x6d76818 <col:49, col:68> 'void (*)()'
  |           `-MemberExpr 0x6d76778 <col:49, col:68> '<bound member function type>' .operator void (*)() 0x6d76390
  |             `-ImplicitCastExpr 0x6d76760 <col:49, col:68> 'const (lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:8:49)' lvalue <NoOp>
  |               `-MaterializeTemporaryExpr 0x6d76748 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:8:49)' lvalue
  |                 `-LambdaExpr 0x6d764f8 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:8:49)'
  |                   |-CXXRecordDecl 0x6d76028 <col:49> col:49 implicit class definition
  |                   | |-DefinitionData lambda pass_in_registers empty standard_layout trivially_copyable literal can_const_default_init
  |                   | | |-DefaultConstructor defaulted_is_constexpr
  |                   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveConstructor exists simple trivial needs_implicit
  |                   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveAssignment
  |                   | | `-Destructor simple irrelevant trivial
  |                   | |-CXXMethodDecl 0x6d76160 <col:52, col:68> col:49 used constexpr operator() 'void () const' inline
  |                   | | `-CompoundStmt 0x6d762f0 <col:53, col:68>
  |                   | |   `-CallExpr 0x6d762b0 <col:54, col:66> 'int'
  |                   | |     |-ImplicitCastExpr 0x6d76298 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                   | |     | `-DeclRefExpr 0x6d76278 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                   | |     `-ImplicitCastExpr 0x6d762d8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                   | |       `-StringLiteral 0x6d76258 <col:61> 'const char [3]' lvalue "B\n"
  |                   | |-CXXConversionDecl 0x6d76390 <col:49> col:49 implicit used constexpr operator void (*)() 'void (*() const noexcept)()' inline
  |                   | | `-CompoundStmt 0x6d76800 <col:49>
  |                   | |   `-ReturnStmt 0x6d767f0 <col:49>
  |                   | |     `-ImplicitCastExpr 0x6d767d8 <col:49> 'void (*)()' <FunctionToPointerDecay>
  |                   | |       `-DeclRefExpr 0x6d767b8 <col:49> 'void ()' lvalue CXXMethod 0x6d76440 '__invoke' 'void ()'
  |                   | |-CXXMethodDecl 0x6d76440 <col:49> col:49 implicit used __invoke 'void ()' static inline
  |                   | | `-CompoundStmt 0x6d767a8 <col:49>
  |                   | `-CXXDestructorDecl 0x6d76528 <col:49> col:49 implicit referenced ~ 'void () noexcept' inline default trivial
  |                   `-CompoundStmt 0x6d762f0 <col:53, col:68>
  |                     `-CallExpr 0x6d762b0 <col:54, col:66> 'int'
  |                       |-ImplicitCastExpr 0x6d76298 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                       | `-DeclRefExpr 0x6d76278 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                       `-ImplicitCastExpr 0x6d762d8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                         `-StringLiteral 0x6d76258 <col:61> 'const char [3]' lvalue "B\n"
  |-DeclStmt 0x6d772c0 <line:9:5, col:70>
  | `-VarDecl 0x6d76908 <col:5, col:69> col:10 used C 'void *':'void *' cinit
  |   `-ExprWithCleanups 0x6d772a8 <col:14, col:69> 'void *'
  |     `-CXXMemberCallExpr 0x6d76ff0 <col:14, col:69> 'void *'
  |       |-MemberExpr 0x6d76990 <col:14, col:28> '<bound member function type>' .task_definition 0x6d746a0
  |       | `-DeclRefExpr 0x6d76970 <col:14> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  |       |-CXXBindTemporaryExpr 0x6d770d8 <col:44> 'std::string':'std::__cxx11::basic_string<char>' (CXXTemporary 0x6d770d8)
  |       | `-ImplicitCastExpr 0x6d770b8 <col:44> 'std::string':'std::__cxx11::basic_string<char>' <ConstructorConversion>
  |       |   `-CXXConstructExpr 0x6d77080 <col:44> 'std::string':'std::__cxx11::basic_string<char>' 'void (const char *, const std::allocator<char> &)'
  |       |     |-ImplicitCastExpr 0x6d77048 <col:44> 'const char *' <ArrayToPointerDecay>
  |       |     | `-StringLiteral 0x6d769c0 <col:44> 'const char [2]' lvalue "C"
  |       |     `-CXXDefaultArgExpr 0x6d77060 <<invalid sloc>> 'const std::allocator<char>':'const std::allocator<char>' lvalue
  |       `-ImplicitCastExpr 0x6d77218 <col:49, col:68> 'void (*)()' <UserDefinedConversion>
  |         `-CXXMemberCallExpr 0x6d771f8 <col:49, col:68> 'void (*)()'
  |           `-MemberExpr 0x6d77158 <col:49, col:68> '<bound member function type>' .operator void (*)() 0x6d76d70
  |             `-ImplicitCastExpr 0x6d77140 <col:49, col:68> 'const (lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:9:49)' lvalue <NoOp>
  |               `-MaterializeTemporaryExpr 0x6d77128 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:9:49)' lvalue
  |                 `-LambdaExpr 0x6d76ed8 <col:49, col:68> '(lambda at /home/lchang21/taskflow/taskflow-lib/use.cpp:9:49)'
  |                   |-CXXRecordDecl 0x6d76a00 <col:49> col:49 implicit class definition
  |                   | |-DefinitionData lambda pass_in_registers empty standard_layout trivially_copyable literal can_const_default_init
  |                   | | |-DefaultConstructor defaulted_is_constexpr
  |                   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveConstructor exists simple trivial needs_implicit
  |                   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |                   | | |-MoveAssignment
  |                   | | `-Destructor simple irrelevant trivial
  |                   | |-CXXMethodDecl 0x6d76b40 <col:52, col:68> col:49 used constexpr operator() 'void () const' inline
  |                   | | `-CompoundStmt 0x6d76cd0 <col:53, col:68>
  |                   | |   `-CallExpr 0x6d76c90 <col:54, col:66> 'int'
  |                   | |     |-ImplicitCastExpr 0x6d76c78 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                   | |     | `-DeclRefExpr 0x6d76c58 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                   | |     `-ImplicitCastExpr 0x6d76cb8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                   | |       `-StringLiteral 0x6d76c38 <col:61> 'const char [3]' lvalue "C\n"
  |                   | |-CXXConversionDecl 0x6d76d70 <col:49> col:49 implicit used constexpr operator void (*)() 'void (*() const noexcept)()' inline
  |                   | | `-CompoundStmt 0x6d771e0 <col:49>
  |                   | |   `-ReturnStmt 0x6d771d0 <col:49>
  |                   | |     `-ImplicitCastExpr 0x6d771b8 <col:49> 'void (*)()' <FunctionToPointerDecay>
  |                   | |       `-DeclRefExpr 0x6d77198 <col:49> 'void ()' lvalue CXXMethod 0x6d76e20 '__invoke' 'void ()'
  |                   | |-CXXMethodDecl 0x6d76e20 <col:49> col:49 implicit used __invoke 'void ()' static inline
  |                   | | `-CompoundStmt 0x6d77188 <col:49>
  |                   | `-CXXDestructorDecl 0x6d76f08 <col:49> col:49 implicit referenced ~ 'void () noexcept' inline default trivial
  |                   `-CompoundStmt 0x6d76cd0 <col:53, col:68>
  |                     `-CallExpr 0x6d76c90 <col:54, col:66> 'int'
  |                       |-ImplicitCastExpr 0x6d76c78 <col:54> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
  |                       | `-DeclRefExpr 0x6d76c58 <col:54> 'int (const char *__restrict, ...)' lvalue Function 0x6b7a310 'printf' 'int (const char *__restrict, ...)'
  |                       `-ImplicitCastExpr 0x6d76cb8 <col:61> 'const char *' <ArrayToPointerDecay>
  |                         `-StringLiteral 0x6d76c38 <col:61> 'const char [3]' lvalue "C\n"
  |-CXXMemberCallExpr 0x6d77368 <line:11:5, col:38> 'void'
  | |-MemberExpr 0x6d772f8 <col:5, col:19> '<bound member function type>' .add_dependency 0x6d748b8
  | | `-DeclRefExpr 0x6d772d8 <col:5> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  | |-ImplicitCastExpr 0x6d77398 <col:34> 'void *':'void *' <LValueToRValue>
  | | `-DeclRefExpr 0x6d77328 <col:34> 'void *':'void *' lvalue Var 0x6d76908 'C' 'void *':'void *'
  | `-ImplicitCastExpr 0x6d773b0 <col:37> 'void *':'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x6d77348 <col:37> 'void *':'void *' lvalue Var 0x6d75f30 'B' 'void *':'void *'
  |-CXXMemberCallExpr 0x6d77458 <line:12:5, col:38> 'void'
  | |-MemberExpr 0x6d773e8 <col:5, col:19> '<bound member function type>' .add_dependency 0x6d748b8
  | | `-DeclRefExpr 0x6d773c8 <col:5> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  | |-ImplicitCastExpr 0x6d77488 <col:34> 'void *':'void *' <LValueToRValue>
  | | `-DeclRefExpr 0x6d77418 <col:34> 'void *':'void *' lvalue Var 0x6d75f30 'B' 'void *':'void *'
  | `-ImplicitCastExpr 0x6d774a0 <col:37> 'void *':'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x6d77438 <col:37> 'void *':'void *' lvalue Var 0x6d75278 'A' 'void *':'void *'
  |-CXXMemberCallExpr 0x6d77508 <line:14:5, col:27> 'void'
  | `-MemberExpr 0x6d774d8 <col:5, col:19> '<bound member function type>' .execute 0x6d74988
  |   `-DeclRefExpr 0x6d774b8 <col:5> 'taskflowLib':'taskflowLib' lvalue Var 0x6d74cc8 'myTaskflowLib' 'taskflowLib':'taskflowLib'
  `-ReturnStmt 0x6d77548 <line:16:3, col:10>
    `-IntegerLiteral 0x6d77528 <col:10> 'int' 0